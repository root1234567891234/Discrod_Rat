using Discord.WebSocket;
// string을 나누거나 합하거나 조합할때 사용하기위한 클래스
// make by root1234567891234 as sillo
// 주석 지우지 마세요

namespace AntiMalware
{
    internal class text
    {
        // string[]을 2번째 요소 부터 string으로 합친다. all_명령어 라인의 명령어들을 위해 만들어짐
        public string split_sum_for_all(string[] content)
        {
            int a = 0;
            string output = "";
            foreach (string line in content)
            {
                if (a >= 1)
                {
                    output += line + " ";
                }
                a++;
            }
            return output;
        }
        // string[]을 3번째 요소 부터 string으로 합친다. 가장 자주 사용
        public string split_sum(string[] content)
        {
            int a = 0;
            string output = "";
            foreach (string line in content)
            {
                if (a >= 2)
                {
                    output += line + " ";
                }
                a++;
            }
            return output;
        }
        // string[]을 4번째 요소 부터 string으로 합친다. open 명령어를 위해서만 만들어졌다.
        public string split_sum_for_open(string[] content)
        {
            int a = 0;
            string output = "";
            foreach (string line in content)
            {
                if (a >= 3)
                {
                    output += line + " ";
                }
                a++;
            }
            return output;
        }
        //string[]를 15 요소마다 나눠서 output에 넣고 output을 출력한다.
        public List<string> split_split(string[] content)
        {
            int i = 1;
            int sp = 1;
            List<string> output = new List<string>();
            if (content.Length > 15)
            {
                sp = (content.Length / 15) + 1;
                Console.WriteLine(sp);
                while (i <= sp)
                {
                    string m = "";
                    int j = 0;
                    foreach (string line in content)
                    {
                        if ((i * 15) <= j)
                        {
                            break;
                        }
                        if (((i - 1) * 15) <= j)
                        {
                            m += line;
                        }
                        j++;
                    }
                    output.Add(m);
                    i++;
                }
            }
            else
            {
                string m = "";
                foreach (string item in content)
                {
                    m += item;
                }
                output.Add(m);
            }
            return output;

        }
        //0.5초마다 split_split된 input을 하나씩 하나씩 출력한다.
        public void Send_delay(SocketUserMessage message,string[] input)
        {
            foreach (string output in this.split_split(input))
            {
                message.Channel.SendMessageAsync(output);
                Thread.Sleep(500);
            }
        }
    }
}
